<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<!-- saved from url=(0070)http://james-iry.blogspot.com/2007/10/monads-are-elephants-part-2.html -->
<html dir="ltr" xmlns="http://www.w3.org/1999/xhtml" xmlns:b="http://www.google.com/2005/gml/b" xmlns:data="http://www.google.com/2005/gml/data" xmlns:expr="http://www.google.com/2005/gml/expr"><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<link href="./One Div Zero  Monads are Elephants Part 2_files/SyntaxHighlighter.css" rel="stylesheet" type="text/css">
<script src="./One Div Zero  Monads are Elephants Part 2_files/cb=gapi.loaded_3" async=""></script><script src="./One Div Zero  Monads are Elephants Part 2_files/cb=gapi.loaded_2" async=""></script><script src="./One Div Zero  Monads are Elephants Part 2_files/cb=gapi.loaded_1" async=""></script><script src="./One Div Zero  Monads are Elephants Part 2_files/cb=gapi.loaded_0" async=""></script><script language="javascript" src="./One Div Zero  Monads are Elephants Part 2_files/shCore.js"></script>
<script language="javascript" src="./One Div Zero  Monads are Elephants Part 2_files/shBrushJava.js"></script>
<script language="javascript" src="./One Div Zero  Monads are Elephants Part 2_files/shBrushScala.js"></script>
<script language="javascript">
window.onload = function () {
    dp.SyntaxHighlighter.BloggerMode();
    dp.SyntaxHighlighter.ClipboardSwf = 'http://syntaxhighlighter.googlecode.com/svn-history/r92/trunk/Scripts/clipboard.swf';
    dp.SyntaxHighlighter.HighlightAll('code');
}
</script>

<script type="text/javascript">(function() { var b=window,f="chrome",g="jstiming",k="tick";(function(){function d(a){this.t={};this.tick=function(a,d,c){var e=void 0!=c?c:(new Date).getTime();this.t[a]=[e,d];if(void 0==c)try{b.console.timeStamp("CSI/"+a)}catch(h){}};this[k]("start",null,a)}var a;b.performance&&(a=b.performance.timing);var n=a?new d(a.responseStart):new d;b.jstiming={Timer:d,load:n};if(a){var c=a.navigationStart,h=a.responseStart;0<c&&h>=c&&(b[g].srt=h-c)}if(a){var e=b[g].load;0<c&&h>=c&&(e[k]("_wtsrt",void 0,c),e[k]("wtsrt_","_wtsrt",h),e[k]("tbsd_","wtsrt_"))}try{a=null,
b[f]&&b[f].csi&&(a=Math.floor(b[f].csi().pageT),e&&0<c&&(e[k]("_tbnd",void 0,b[f].csi().startE),e[k]("tbnd_","_tbnd",c))),null==a&&b.gtbExternal&&(a=b.gtbExternal.pageT()),null==a&&b.external&&(a=b.external.pageT,e&&0<c&&(e[k]("_tbnd",void 0,b.external.startE),e[k]("tbnd_","_tbnd",c))),a&&(b[g].pt=a)}catch(p){}})();b.tickAboveFold=function(d){var a=0;if(d.offsetParent){do a+=d.offsetTop;while(d=d.offsetParent)}d=a;750>=d&&b[g].load[k]("aft")};var l=!1;function m(){l||(l=!0,b[g].load[k]("firstScrollTime"))}b.addEventListener?b.addEventListener("scroll",m,!1):b.attachEvent("onscroll",m);
 })();</script>
<meta content="blogger" name="generator">
<link href="http://james-iry.blogspot.com/favicon.ico" rel="icon" type="image/x-icon">
<link href="./One Div Zero  Monads are Elephants Part 2_files/One Div Zero  Monads are Elephants Part 2.htm" rel="canonical">
<link rel="alternate" type="application/atom+xml" title="One Div Zero - Atom" href="http://james-iry.blogspot.com/feeds/posts/default">
<link rel="alternate" type="application/rss+xml" title="One Div Zero - RSS" href="http://james-iry.blogspot.com/feeds/posts/default?alt=rss">
<link rel="service.post" type="application/atom+xml" title="One Div Zero - Atom" href="http://www.blogger.com/feeds/178174920347765771/posts/default">

<link rel="alternate" type="application/atom+xml" title="One Div Zero - Atom" href="http://james-iry.blogspot.com/feeds/1884014050593696028/comments/default">
<!--[if IE]> <script> (function() { var html5 = ("abbr,article,aside,audio,canvas,datalist,details," + "figure,footer,header,hgroup,mark,menu,meter,nav,output," + "progress,section,time,video").split(','); for (var i = 0; i < html5.length; i++) { document.createElement(html5[i]); } try { document.execCommand('BackgroundImageCache', false, true); } catch(e) {} })(); </script> <![endif]-->
<title>One Div Zero: Monads are Elephants Part 2</title>
<link type="text/css" rel="stylesheet" href="./One Div Zero  Monads are Elephants Part 2_files/3028179046-widget_css_bundle.css">
<link type="text/css" rel="stylesheet" href="./One Div Zero  Monads are Elephants Part 2_files/authorization.css">
<style id="page-skin-1" type="text/css"><!--
/*
-----------------------------------------------
Blogger Template Style
Name:     Minima
Date:     26 Feb 2004
Updated by: Blogger Team
----------------------------------------------- */
/* Variable definitions
====================
<Variable name="bgcolor" description="Page Background Color"
type="color" default="#fff">
<Variable name="textcolor" description="Text Color"
type="color" default="#333">
<Variable name="linkcolor" description="Link Color"
type="color" default="#58a">
<Variable name="pagetitlecolor" description="Blog Title Color"
type="color" default="#666">
<Variable name="descriptioncolor" description="Blog Description Color"
type="color" default="#999">
<Variable name="titlecolor" description="Post Title Color"
type="color" default="#c60">
<Variable name="bordercolor" description="Border Color"
type="color" default="#ccc">
<Variable name="sidebarcolor" description="Sidebar Title Color"
type="color" default="#999">
<Variable name="sidebartextcolor" description="Sidebar Text Color"
type="color" default="#666">
<Variable name="visitedlinkcolor" description="Visited Link Color"
type="color" default="#999">
<Variable name="bodyfont" description="Text Font"
type="font" default="normal normal 100% Georgia, Serif">
<Variable name="headerfont" description="Sidebar Title Font"
type="font"
default="normal normal 78% 'Trebuchet MS',Trebuchet,Arial,Verdana,Sans-serif">
<Variable name="pagetitlefont" description="Blog Title Font"
type="font"
default="normal normal 200% Georgia, Serif">
<Variable name="descriptionfont" description="Blog Description Font"
type="font"
default="normal normal 78% 'Trebuchet MS', Trebuchet, Arial, Verdana, Sans-serif">
<Variable name="postfooterfont" description="Post Footer Font"
type="font"
default="normal normal 78% 'Trebuchet MS', Trebuchet, Arial, Verdana, Sans-serif">
<Variable name="startSide" description="Side where text starts in blog language"
type="automatic" default="left">
<Variable name="endSide" description="Side where text ends in blog language"
type="automatic" default="right">
*/
/* Use this with templates/template-twocol.html */
body {
background:#ffffff;
margin:0;
color:#333333;
font:x-small Georgia Serif;
font-size/* */:/**/small;
font-size: /**/small;
text-align: center;
}
a:link {
color:#5588aa;
text-decoration:none;
}
a:visited {
color:#999999;
text-decoration:none;
}
a:hover {
color:#cc6600;
text-decoration:underline;
}
a img {
border-width:0;
}
/* Header
-----------------------------------------------
*/
#header-wrapper {
width:660px;
margin:0 auto 10px;
border:1px solid #cccccc;
}
#header-inner {
background-position: center;
margin-left: auto;
margin-right: auto;
}
#header {
margin: 5px;
border: 1px solid #cccccc;
text-align: center;
color:#666666;
}
#header h1 {
margin:5px 5px 0;
padding:15px 20px .25em;
line-height:1.2em;
text-transform:uppercase;
letter-spacing:.2em;
font: normal normal 200% Georgia, Serif;
}
#header a {
color:#666666;
text-decoration:none;
}
#header a:hover {
color:#666666;
}
#header .description {
margin:0 5px 5px;
padding:0 20px 15px;
max-width:700px;
text-transform:uppercase;
letter-spacing:.2em;
line-height: 1.4em;
font: normal normal 78% 'Trebuchet MS', Trebuchet, Arial, Verdana, Sans-serif;
color: #999999;
}
#header img {
margin-left: auto;
margin-right: auto;
}
/* Outer-Wrapper
----------------------------------------------- */
#outer-wrapper {
width: 660px;
margin:0 auto;
padding:10px;
text-align:left;
font: normal normal 100% Georgia, Serif;
}
#main-wrapper {
width: 410px;
float: left;
word-wrap: break-word; /* fix for long text breaking sidebar float in IE */
overflow: hidden;     /* fix for long non-text content breaking IE sidebar float */
}
#sidebar-wrapper {
width: 220px;
float: right;
word-wrap: break-word; /* fix for long text breaking sidebar float in IE */
overflow: hidden;      /* fix for long non-text content breaking IE sidebar float */
}
/* Headings
----------------------------------------------- */
h2 {
margin:1.5em 0 .75em;
font:normal normal 78% 'Trebuchet MS',Trebuchet,Arial,Verdana,Sans-serif;
line-height: 1.4em;
text-transform:uppercase;
letter-spacing:.2em;
color:#999999;
}
/* Posts
-----------------------------------------------
*/
h2.date-header {
margin:1.5em 0 .5em;
}
.post {
margin:.5em 0 1.5em;
border-bottom:1px dotted #cccccc;
padding-bottom:1.5em;
}
.post h3 {
margin:.25em 0 0;
padding:0 0 4px;
font-size:140%;
font-weight:normal;
line-height:1.4em;
color:#cc6600;
}
.post h3 a, .post h3 a:visited, .post h3 strong {
display:block;
text-decoration:none;
color:#cc6600;
font-weight:normal;
}
.post h3 strong, .post h3 a:hover {
color:#333333;
}
.post-body {
margin:0 0 .75em;
line-height:1.6em;
}
.post-body blockquote {
line-height:1.3em;
}
.post-footer {
margin: .75em 0;
color:#999999;
text-transform:uppercase;
letter-spacing:.1em;
font: normal normal 78% 'Trebuchet MS', Trebuchet, Arial, Verdana, Sans-serif;
line-height: 1.4em;
}
.comment-link {
margin-left:.6em;
}
.post img, table.tr-caption-container {
padding:4px;
border:1px solid #cccccc;
}
.tr-caption-container img {
border: none;
padding: 0;
}
.post blockquote {
margin:1em 20px;
}
.post blockquote p {
margin:.75em 0;
}
/* Comments
----------------------------------------------- */
#comments h4 {
margin:1em 0;
font-weight: bold;
line-height: 1.4em;
text-transform:uppercase;
letter-spacing:.2em;
color: #999999;
}
#comments-block {
margin:1em 0 1.5em;
line-height:1.6em;
}
#comments-block .comment-author {
margin:.5em 0;
}
#comments-block .comment-body {
margin:.25em 0 0;
}
#comments-block .comment-footer {
margin:-.25em 0 2em;
line-height: 1.4em;
text-transform:uppercase;
letter-spacing:.1em;
}
#comments-block .comment-body p {
margin:0 0 .75em;
}
.deleted-comment {
font-style:italic;
color:gray;
}
#blog-pager-newer-link {
float: left;
}
#blog-pager-older-link {
float: right;
}
#blog-pager {
text-align: center;
}
.feed-links {
clear: both;
line-height: 2.5em;
}
/* Sidebar Content
----------------------------------------------- */
.sidebar {
color: #666666;
line-height: 1.5em;
}
.sidebar ul {
list-style:none;
margin:0 0 0;
padding:0 0 0;
}
.sidebar li {
margin:0;
padding-top:0;
padding-right:0;
padding-bottom:.25em;
padding-left:15px;
text-indent:-15px;
line-height:1.5em;
}
.sidebar .widget, .main .widget {
border-bottom:1px dotted #cccccc;
margin:0 0 1.5em;
padding:0 0 1.5em;
}
.main .Blog {
border-bottom-width: 0;
}
/* Profile
----------------------------------------------- */
.profile-img {
float: left;
margin-top: 0;
margin-right: 5px;
margin-bottom: 5px;
margin-left: 0;
padding: 4px;
border: 1px solid #cccccc;
}
.profile-data {
margin:0;
text-transform:uppercase;
letter-spacing:.1em;
font: normal normal 78% 'Trebuchet MS', Trebuchet, Arial, Verdana, Sans-serif;
color: #999999;
font-weight: bold;
line-height: 1.6em;
}
.profile-datablock {
margin:.5em 0 .5em;
}
.profile-textblock {
margin: 0.5em 0;
line-height: 1.6em;
}
.profile-link {
font: normal normal 78% 'Trebuchet MS', Trebuchet, Arial, Verdana, Sans-serif;
text-transform: uppercase;
letter-spacing: .1em;
}
/* Footer
----------------------------------------------- */
#footer {
width:660px;
clear:both;
margin:0 auto;
padding-top:15px;
line-height: 1.6em;
text-transform:uppercase;
letter-spacing:.1em;
text-align: center;
}

--></style>
<script type="text/javascript">var a="indexOf",b="&m=1",e="(^|&)m=",f="?",g="?m=1";function h(){var c=window.location.href,d=c.split(f);switch(d.length){case 1:return c+g;case 2:return 0<=d[1].search(e)?null:c+b;default:return null}}var k=navigator.userAgent;if(-1!=k[a]("Mobile")&&-1!=k[a]("WebKit")&&-1==k[a]("iPad")||-1!=k[a]("Opera Mini")||-1!=k[a]("IEMobile")){var l=h();l&&window.location.replace(l)};
</script><script type="text/javascript">
if (window.jstiming) window.jstiming.load.tick('headEnd');
</script><script type="text/javascript" src="./One Div Zero  Monads are Elephants Part 2_files/google_top_exp.js"></script><script type="text/javascript" async="" src="./One Div Zero  Monads are Elephants Part 2_files/blogger_item.js"></script><script type="text/javascript" async="" src="./One Div Zero  Monads are Elephants Part 2_files/blogger_index.js"></script><script async="" src="./One Div Zero  Monads are Elephants Part 2_files/embed.js"></script><script async="" src="./One Div Zero  Monads are Elephants Part 2_files/count.js"></script><style>.gc-bubbleDefault{background-color:transparent !important;text-align:left;padding:0 !important;margin:0 !important;border:0 !important;table-layout:auto !important}.gc-reset{background-color:transparent !important;border:0 !important;padding:0 !important;margin:0 !important;text-align:left}.pls-bubbleTop{border-bottom:1px solid #ccc !important}.pls-topTail,.pls-vertShimLeft,.pls-contentLeft{background-image:url(//ssl.gstatic.com/s2/oz/images/stars/po/bubblev1/border_3.gif) !important}.pls-topTail{background-repeat:repeat-x !important;background-position:bottom !important}.pls-vertShim{background-color:#fff !important;text-align:right}.tbl-grey .pls-vertShim{background-color:#f5f5f5 !important}.pls-vertShimLeft{background-repeat:repeat-y !important;background-position:right !important;height:4px}.pls-vertShimRight{height:4px}.pls-confirm-container .pls-vertShim{background-color:#fff3c2 !important}.pls-contentWrap{background-color:#fff !important;position:relative !important;vertical-align:top}.pls-contentLeft{background-repeat:repeat-y;background-position:right;vertical-align:top}.pls-dropRight{background-image:url(//ssl.gstatic.com/s2/oz/images/stars/po/bubblev1/bubbleDropR_3.png) !important;background-repeat:repeat-y !important;vertical-align:top}.pls-vert,.pls-tailleft,.pls-dropTR .pls-dropBR,.pls-dropBL,.pls-vert img{vertical-align:top}.pls-dropBottom{background-image:url(//ssl.gstatic.com/s2/oz/images/stars/po/bubblev1/bubbleDropB_3.png) !important;background-repeat:repeat-x !important;width:100%;vertical-align:top}.pls-topLeft{background:inherit !important;text-align:right;vertical-align:bottom}.pls-topRight{background:inherit !important;text-align:left;vertical-align:bottom}.pls-bottomLeft{background:inherit !important;text-align:right}.pls-bottomRight{background:inherit !important;text-align:left;vertical-align:top}.pls-tailtop,.pls-tailright,.pls-tailbottom,.pls-tailleft{display:none;position:relative}.pls-tailbottom,.pls-tailtop,.pls-tailright,.pls-tailleft,.pls-dropTR,.pls-dropBR,.pls-dropBL{background-image:url(//ssl.gstatic.com/s2/oz/images/stars/po/bubblev1/bubbleSprite_3.png) !important;background-repeat:no-repeat}.tbl-grey .pls-tailbottom,.tbl-grey .pls-tailtop,.tbl-grey .pls-tailright,.tbl-grey .pls-tailleft,.tbl-grey .pls-dropTR,.tbl-grey .pls-dropBR,.tbl-grey .pls-dropBL{background-image:url(//ssl.gstatic.com/s2/oz/images/stars/po/bubblev1/bubbleSprite-grey.png) !important}.pls-tailbottom{background-position:-23px 0}.pls-confirm-container .pls-tailbottom{background-position:-23px -10px}.pls-tailtop{background-position:-19px -20px}.pls-tailright{background-position:0 0}.pls-tailleft{background-position:-10px 0}.pls-tailtop{vertical-align:top}.gc-bubbleDefault td{line-height:0;font-size:0}.pls-topLeft img,.pls-topRight img,.pls-tailbottom{vertical-align:bottom}.pls-bottomLeft img,.bubbleDropTR,.pls-dropBottomL img,.pls-dropBottom img,.pls-dropBottomR img,.pls-bottomLeft{vertical-align:top}.pls-dropTR{background-position:0 -22px}.pls-dropBR{background-position:0 -27px}.pls-dropBL{background-position:0 -16px}.pls-spacertop,.pls-spacerright,.pls-spacerbottom,.pls-spacerleft{position:static !important}.pls-spinner{bottom:0;position:absolute;left:0;margin:auto;right:0;top:0}</style><script async="" src="./One Div Zero  Monads are Elephants Part 2_files/count-data.js"></script><script src="./One Div Zero  Monads are Elephants Part 2_files/alfie.f51946af45e0b561c60f768335c9eb79.js" async="" charset="UTF-8"></script><style type="text/css">.dp-j .annotation { color: #646464; }.dp-j .number { color: #C00000; }</style><style type="text/css">.dp-j .annotation { color: #646464; }.dp-j .number { color: #C00000; }</style><style type="text/css">.dp-j .annotation { color: #646464; }.dp-j .number { color: #C00000; }</style><style type="text/css">.dp-j .annotation { color: #646464; }.dp-j .number { color: #C00000; }</style><style type="text/css">.dp-j .annotation { color: #646464; }.dp-j .number { color: #C00000; }</style><style type="text/css">.dp-j .annotation { color: #646464; }.dp-j .number { color: #C00000; }</style><style type="text/css">.dp-j .annotation { color: #646464; }.dp-j .number { color: #C00000; }</style><style type="text/css">.dp-j .annotation { color: #646464; }.dp-j .number { color: #C00000; }</style><style type="text/css">.dp-j .annotation { color: #646464; }.dp-j .number { color: #C00000; }</style><style type="text/css">.dp-j .annotation { color: #646464; }.dp-j .number { color: #C00000; }</style><style type="text/css">.dp-j .annotation { color: #646464; }.dp-j .number { color: #C00000; }</style><style type="text/css">.dp-j .annotation { color: #646464; }.dp-j .number { color: #C00000; }</style><style type="text/css">.dp-j .annotation { color: #646464; }.dp-j .number { color: #C00000; }</style><style type="text/css">.dp-j .annotation { color: #646464; }.dp-j .number { color: #C00000; }</style><style type="text/css">.dp-j .annotation { color: #646464; }.dp-j .number { color: #C00000; }</style><style type="text/css">.dp-j .annotation { color: #646464; }.dp-j .number { color: #C00000; }</style></head>
<body>
<div class="navbar section" id="navbar"><div class="widget Navbar" id="Navbar1"><script type="text/javascript">
    function setAttributeOnload(object, attribute, val) {
      if(window.addEventListener) {
        window.addEventListener('load',
          function(){ object[attribute] = val; }, false);
      } else {
        window.attachEvent('onload', function(){ object[attribute] = val; });
      }
    }
  </script>
<div id="navbar-iframe-container"><iframe frameborder="0" hspace="0" marginheight="0" marginwidth="0" scrolling="no" style="" tabindex="0" vspace="0" width="100%" id="navbar-iframe" name="navbar-iframe" src="./One Div Zero  Monads are Elephants Part 2_files/navbar.htm"></iframe></div>
<script type="text/javascript" src="./One Div Zero  Monads are Elephants Part 2_files/plusone.js" gapi_processed="true"></script>
<script type="text/javascript">
        gapi.load("gapi.iframes:gapi.iframes.style.bubble", function() {
          if (gapi.iframes && gapi.iframes.getContext) {
            gapi.iframes.getContext().openChild({
                url: 'https://www.blogger.com/navbar.g?targetBlogID\075178174920347765771\46blogName\75One+Div+Zero\46publishMode\75PUBLISH_MODE_BLOGSPOT\46navbarType\75BLUE\46layoutType\75LAYOUTS\46searchRoot\75http://james-iry.blogspot.com/search\46blogLocale\75en_US\46v\0752\46homepageUrl\75http://james-iry.blogspot.com/\46targetPostID\0751884014050593696028\46blogPostOrPageUrl\75http://james-iry.blogspot.com/2007/10/monads-are-elephants-part-2.html\46vt\75-4908999860051073177',
                where: document.getElementById("navbar-iframe-container"),
                id: "navbar-iframe"
            });
          }
        });
      </script><script type="text/javascript">
(function() {
var script = document.createElement('script');
script.type = 'text/javascript';
script.src = '//pagead2.googlesyndication.com/pagead/js/google_top_exp.js';
var head = document.getElementsByTagName('head')[0];
if (head) {
head.appendChild(script);
}})();
</script>
</div></div>
<div id="outer-wrapper"><div id="wrap2">
<!-- skip links for text browsers -->
<span id="skiplinks" style="display:none;">
<a href="http://james-iry.blogspot.com/2007/10/monads-are-elephants-part-2.html#main">skip to main </a> |
      <a href="http://james-iry.blogspot.com/2007/10/monads-are-elephants-part-2.html#sidebar">skip to sidebar</a>
</span>
<div id="header-wrapper">
<div class="header section" id="header"><div class="widget Header" id="Header1">
<div id="header-inner">
<div class="titlewrapper">
<h1 class="title">
<a href="http://james-iry.blogspot.com/">One Div Zero</a>
</h1>
</div>
<div class="descriptionwrapper">
<p class="description"><span>An exploration of software development.</span></p>
</div>
</div>
</div></div>
</div>
<div id="content-wrapper">
<div id="crosscol-wrapper" style="text-align:center">
<div class="crosscol section" id="crosscol"></div>
</div>
<div id="main-wrapper">
<div class="main section" id="main"><div class="widget Blog" id="Blog1">
<div class="blog-posts hfeed">
<!-- google_ad_section_start(name=default) -->

          <div class="date-outer">
        
<h2 class="date-header"><span>Tuesday, October 2, 2007</span></h2>

          <div class="date-posts">
        
<div class="post-outer">
<div class="post hentry">
<a name="1884014050593696028"></a>
<h3 class="post-title entry-title">
<a href="./One Div Zero  Monads are Elephants Part 2_files/One Div Zero  Monads are Elephants Part 2.htm">Monads are Elephants Part 2</a>
</h3>
<div class="post-header">
<div class="post-header-line-1"></div>
</div>
<div class="post-body entry-content">
<p>In <a href="http://james-iry.blogspot.com/2007/09/monads-are-elephants-part-1.html">part 1</a>, I introduced <a href="http://www.scala-lang.org/">Scala's</a> monads through the parable of the blind men and the elephant.  Normally we're supposed to take the view that each blind man doesn't come close to understanding what an elephant is, but I presented the alternative view that if you heard all the blind men describe their experience then you'd quickly build a surprisingly good understanding of elephants.</p><p>In part 2 I'm going to poke at the beast some more by exploring Scala's monad related syntactic sugar: "for comprehensions."</p><h3>A Little "For"</h3><p>A very simple "for" looks like this</p>
<div class="dp-highlighter"><div class="bar"><div class="tools"><a href="http://james-iry.blogspot.com/2007/10/monads-are-elephants-part-2.html#" onclick="dp.sh.Toolbar.Command(&#39;ViewSource&#39;,this);return false;">view plain</a><a href="http://james-iry.blogspot.com/2007/10/monads-are-elephants-part-2.html#" onclick="dp.sh.Toolbar.Command(&#39;CopyToClipboard&#39;,this);return false;">copy to clipboard</a><a href="http://james-iry.blogspot.com/2007/10/monads-are-elephants-part-2.html#" onclick="dp.sh.Toolbar.Command(&#39;PrintSource&#39;,this);return false;">print</a><a href="http://james-iry.blogspot.com/2007/10/monads-are-elephants-part-2.html#" onclick="dp.sh.Toolbar.Command(&#39;About&#39;,this);return false;">?</a></div></div><ol class="dp-j"><li class="alt"><span><span class="keyword">val</span><span>&nbsp;ns&nbsp;</span><span class="keyword">=</span><span>&nbsp;List(</span><span class="number">1</span><span>,&nbsp;</span><span class="number">2</span><span>)&nbsp;&nbsp;</span></span></li><li class=""><span><span class="keyword">val</span><span>&nbsp;qs&nbsp;</span><span class="keyword">=</span><span>&nbsp;</span><span class="keyword">for</span><span>&nbsp;(n&nbsp;&lt;-&nbsp;ns)&nbsp;</span><span class="keyword">yield</span><span>&nbsp;n&nbsp;*&nbsp;</span><span class="number">2</span><span>&nbsp;&nbsp;</span></span></li><li class="alt"><span>assert&nbsp;(qs&nbsp;<span class="keyword">==</span><span>&nbsp;List(</span><span class="number">2</span><span>,&nbsp;</span><span class="number">4</span><span>))&nbsp;&nbsp;</span></span></li></ol></div><pre name="code" class="scala" style="display: none;">val ns = List(1, 2)
val qs = for (n &lt;- ns) yield n * 2
assert (qs == List(2, 4))
</pre><p>The "for" can be read as "for [each] n [in] ns yield n * 2."  It looks like a loop, but it's not.  This is our old friend map in disguise.</p>
<div class="dp-highlighter"><div class="bar"><div class="tools"><a href="http://james-iry.blogspot.com/2007/10/monads-are-elephants-part-2.html#" onclick="dp.sh.Toolbar.Command(&#39;ViewSource&#39;,this);return false;">view plain</a><a href="http://james-iry.blogspot.com/2007/10/monads-are-elephants-part-2.html#" onclick="dp.sh.Toolbar.Command(&#39;CopyToClipboard&#39;,this);return false;">copy to clipboard</a><a href="http://james-iry.blogspot.com/2007/10/monads-are-elephants-part-2.html#" onclick="dp.sh.Toolbar.Command(&#39;PrintSource&#39;,this);return false;">print</a><a href="http://james-iry.blogspot.com/2007/10/monads-are-elephants-part-2.html#" onclick="dp.sh.Toolbar.Command(&#39;About&#39;,this);return false;">?</a></div></div><ol class="dp-j"><li class="alt"><span><span class="keyword">val</span><span>&nbsp;qs&nbsp;</span><span class="keyword">=</span><span>&nbsp;ns&nbsp;map&nbsp;{n&nbsp;</span><span class="keyword">=</span><span>&gt;&nbsp;n&nbsp;*&nbsp;</span><span class="number">2</span><span>}&nbsp;&nbsp;</span></span></li></ol></div><pre name="code" class="scala" style="display: none;">val qs = ns map {n =&gt; n * 2}
</pre><p>The rule here is simple</p>
<div class="dp-highlighter"><div class="bar"><div class="tools"><a href="http://james-iry.blogspot.com/2007/10/monads-are-elephants-part-2.html#" onclick="dp.sh.Toolbar.Command(&#39;ViewSource&#39;,this);return false;">view plain</a><a href="http://james-iry.blogspot.com/2007/10/monads-are-elephants-part-2.html#" onclick="dp.sh.Toolbar.Command(&#39;CopyToClipboard&#39;,this);return false;">copy to clipboard</a><a href="http://james-iry.blogspot.com/2007/10/monads-are-elephants-part-2.html#" onclick="dp.sh.Toolbar.Command(&#39;PrintSource&#39;,this);return false;">print</a><a href="http://james-iry.blogspot.com/2007/10/monads-are-elephants-part-2.html#" onclick="dp.sh.Toolbar.Command(&#39;About&#39;,this);return false;">?</a></div></div><ol class="dp-j"><li class="alt"><span><span class="keyword">for</span><span>&nbsp;(x&nbsp;&lt;-&nbsp;expr)&nbsp;</span><span class="keyword">yield</span><span>&nbsp;resultExpr&nbsp;&nbsp;</span></span></li></ol></div><pre name="code" class="scala" style="display: none;">for (x &lt;- expr) yield resultExpr
</pre><p>Expands to<sup><a name="backfoot1"></a><a href="http://james-iry.blogspot.com/2007/10/monads-are-elephants-part-2.html#footnote1">1</a></sup> </p>
<div class="dp-highlighter"><div class="bar"><div class="tools"><a href="http://james-iry.blogspot.com/2007/10/monads-are-elephants-part-2.html#" onclick="dp.sh.Toolbar.Command(&#39;ViewSource&#39;,this);return false;">view plain</a><a href="http://james-iry.blogspot.com/2007/10/monads-are-elephants-part-2.html#" onclick="dp.sh.Toolbar.Command(&#39;CopyToClipboard&#39;,this);return false;">copy to clipboard</a><a href="http://james-iry.blogspot.com/2007/10/monads-are-elephants-part-2.html#" onclick="dp.sh.Toolbar.Command(&#39;PrintSource&#39;,this);return false;">print</a><a href="http://james-iry.blogspot.com/2007/10/monads-are-elephants-part-2.html#" onclick="dp.sh.Toolbar.Command(&#39;About&#39;,this);return false;">?</a></div></div><ol class="dp-j"><li class="alt"><span><span>expr&nbsp;map&nbsp;{x&nbsp;</span><span class="keyword">=</span><span>&gt;&nbsp;resultExpr}&nbsp;&nbsp;</span></span></li></ol></div><pre name="code" class="scala" style="display: none;">expr map {x =&gt; resultExpr}
</pre><p>And as a reminder, that's equivalent to</p><p>
</p><div class="dp-highlighter"><div class="bar"><div class="tools"><a href="http://james-iry.blogspot.com/2007/10/monads-are-elephants-part-2.html#" onclick="dp.sh.Toolbar.Command(&#39;ViewSource&#39;,this);return false;">view plain</a><a href="http://james-iry.blogspot.com/2007/10/monads-are-elephants-part-2.html#" onclick="dp.sh.Toolbar.Command(&#39;CopyToClipboard&#39;,this);return false;">copy to clipboard</a><a href="http://james-iry.blogspot.com/2007/10/monads-are-elephants-part-2.html#" onclick="dp.sh.Toolbar.Command(&#39;PrintSource&#39;,this);return false;">print</a><a href="http://james-iry.blogspot.com/2007/10/monads-are-elephants-part-2.html#" onclick="dp.sh.Toolbar.Command(&#39;About&#39;,this);return false;">?</a></div></div><ol class="dp-j"><li class="alt"><span><span>expr&nbsp;flatMap&nbsp;{x&nbsp;</span><span class="keyword">=</span><span>&gt;&nbsp;unit(resultExpr)}&nbsp;&nbsp;</span></span></li></ol></div><pre name="code" class="scala" style="display: none;">expr flatMap {x =&gt; unit(resultExpr)}
</pre><h3>More "For"</h3><p>One expression in a "for" isn't terribly interesting.  Let's add some more</p>
<div class="dp-highlighter"><div class="bar"><div class="tools"><a href="http://james-iry.blogspot.com/2007/10/monads-are-elephants-part-2.html#" onclick="dp.sh.Toolbar.Command(&#39;ViewSource&#39;,this);return false;">view plain</a><a href="http://james-iry.blogspot.com/2007/10/monads-are-elephants-part-2.html#" onclick="dp.sh.Toolbar.Command(&#39;CopyToClipboard&#39;,this);return false;">copy to clipboard</a><a href="http://james-iry.blogspot.com/2007/10/monads-are-elephants-part-2.html#" onclick="dp.sh.Toolbar.Command(&#39;PrintSource&#39;,this);return false;">print</a><a href="http://james-iry.blogspot.com/2007/10/monads-are-elephants-part-2.html#" onclick="dp.sh.Toolbar.Command(&#39;About&#39;,this);return false;">?</a></div></div><ol class="dp-j"><li class="alt"><span><span class="keyword">val</span><span>&nbsp;ns&nbsp;</span><span class="keyword">=</span><span>&nbsp;List(</span><span class="number">1</span><span>,&nbsp;</span><span class="number">2</span><span>)&nbsp;&nbsp;</span></span></li><li class=""><span><span class="keyword">val</span><span>&nbsp;os&nbsp;</span><span class="keyword">=</span><span>&nbsp;List&nbsp;(</span><span class="number">4</span><span>,&nbsp;</span><span class="number">5</span><span>)&nbsp;&nbsp;</span></span></li><li class="alt"><span><span class="keyword">val</span><span>&nbsp;qs&nbsp;</span><span class="keyword">=</span><span>&nbsp;</span><span class="keyword">for</span><span>&nbsp;(n&nbsp;&lt;-&nbsp;ns;&nbsp;o&nbsp;&lt;-&nbsp;os)&nbsp;&nbsp;&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;<span class="keyword">yield</span><span>&nbsp;n&nbsp;*&nbsp;o&nbsp;&nbsp;</span></span></li><li class="alt"><span>assert&nbsp;(qs&nbsp;<span class="keyword">==</span><span>&nbsp;List&nbsp;(</span><span class="number">1</span><span>*</span><span class="number">4</span><span>,&nbsp;</span><span class="number">1</span><span>*</span><span class="number">5</span><span>,&nbsp;</span><span class="number">2</span><span>*</span><span class="number">4</span><span>,&nbsp;</span><span class="number">2</span><span>*</span><span class="number">5</span><span>))&nbsp;&nbsp;</span></span></li></ol></div><pre name="code" class="scala" style="display: none;">val ns = List(1, 2)
val os = List (4, 5)
val qs = for (n &lt;- ns; o &lt;- os)  
   yield n * o
assert (qs == List (1*4, 1*5, 2*4, 2*5))
</pre><p>This "for" could be read "for [each] n [in] ns [and each] o [in] os yield n * o.  This form of "for" looks a bit like nested loops but it's just a bit of map and flatMap.</p>
<div class="dp-highlighter"><div class="bar"><div class="tools"><a href="http://james-iry.blogspot.com/2007/10/monads-are-elephants-part-2.html#" onclick="dp.sh.Toolbar.Command(&#39;ViewSource&#39;,this);return false;">view plain</a><a href="http://james-iry.blogspot.com/2007/10/monads-are-elephants-part-2.html#" onclick="dp.sh.Toolbar.Command(&#39;CopyToClipboard&#39;,this);return false;">copy to clipboard</a><a href="http://james-iry.blogspot.com/2007/10/monads-are-elephants-part-2.html#" onclick="dp.sh.Toolbar.Command(&#39;PrintSource&#39;,this);return false;">print</a><a href="http://james-iry.blogspot.com/2007/10/monads-are-elephants-part-2.html#" onclick="dp.sh.Toolbar.Command(&#39;About&#39;,this);return false;">?</a></div></div><ol class="dp-j"><li class="alt"><span><span class="keyword">val</span><span>&nbsp;qs&nbsp;</span><span class="keyword">=</span><span>&nbsp;ns&nbsp;flatMap&nbsp;{n&nbsp;</span><span class="keyword">=</span><span>&gt;&nbsp;&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;os&nbsp;map&nbsp;{o&nbsp;<span class="keyword">=</span><span>&gt;&nbsp;n&nbsp;*&nbsp;o&nbsp;}}&nbsp;&nbsp;</span></span></li></ol></div><pre name="code" class="scala" style="display: none;">val qs = ns flatMap {n =&gt; 
   os map {o =&gt; n * o }}
</pre><p>It's worth while to spend a moment understanding why this works.   Here's how it gets computed (red italics gets turned into bold green):</p>
<pre><ol>
<li>val qs = ns flatMap {n =&gt; 
   <font color="red"><i>os map {o =&gt; n * o }</i></font>}</li>
<li>val qs = <font color="red"><i>ns flatMap {n =&gt; 
   </i></font><font color="green"><b>List(n * 4, n * 5)</b></font><font color="red"><i>}</i></font></li>
<li>val qs = 
   <font color="green"><b>List(1 * 4, 1 * 5, 2 * 4, 2 * 5)</b></font></li>
</ol></pre>
<h3>Now With More Expression</h3><p>Let's kick it up a notch.</p>
<div class="dp-highlighter"><div class="bar"><div class="tools"><a href="http://james-iry.blogspot.com/2007/10/monads-are-elephants-part-2.html#" onclick="dp.sh.Toolbar.Command(&#39;ViewSource&#39;,this);return false;">view plain</a><a href="http://james-iry.blogspot.com/2007/10/monads-are-elephants-part-2.html#" onclick="dp.sh.Toolbar.Command(&#39;CopyToClipboard&#39;,this);return false;">copy to clipboard</a><a href="http://james-iry.blogspot.com/2007/10/monads-are-elephants-part-2.html#" onclick="dp.sh.Toolbar.Command(&#39;PrintSource&#39;,this);return false;">print</a><a href="http://james-iry.blogspot.com/2007/10/monads-are-elephants-part-2.html#" onclick="dp.sh.Toolbar.Command(&#39;About&#39;,this);return false;">?</a></div></div><ol class="dp-j"><li class="alt"><span><span class="keyword">val</span><span>&nbsp;qs&nbsp;</span><span class="keyword">=</span><span>&nbsp;&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;<span class="keyword">for</span><span>&nbsp;(n&nbsp;&lt;-&nbsp;ns;&nbsp;o&nbsp;&lt;-&nbsp;os;&nbsp;p&nbsp;&lt;-&nbsp;ps)&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">yield</span><span>&nbsp;n&nbsp;*&nbsp;o&nbsp;*&nbsp;p&nbsp;&nbsp;</span></span></li></ol></div><pre name="code" class="scala" style="display: none;">val qs = 
   for (n &lt;- ns; o &lt;- os; p &lt;- ps)
      yield n * o * p
</pre><p>This "for" gets expanded into</p>
<div class="dp-highlighter"><div class="bar"><div class="tools"><a href="http://james-iry.blogspot.com/2007/10/monads-are-elephants-part-2.html#" onclick="dp.sh.Toolbar.Command(&#39;ViewSource&#39;,this);return false;">view plain</a><a href="http://james-iry.blogspot.com/2007/10/monads-are-elephants-part-2.html#" onclick="dp.sh.Toolbar.Command(&#39;CopyToClipboard&#39;,this);return false;">copy to clipboard</a><a href="http://james-iry.blogspot.com/2007/10/monads-are-elephants-part-2.html#" onclick="dp.sh.Toolbar.Command(&#39;PrintSource&#39;,this);return false;">print</a><a href="http://james-iry.blogspot.com/2007/10/monads-are-elephants-part-2.html#" onclick="dp.sh.Toolbar.Command(&#39;About&#39;,this);return false;">?</a></div></div><ol class="dp-j"><li class="alt"><span><span class="keyword">val</span><span>&nbsp;qs&nbsp;</span><span class="keyword">=</span><span>&nbsp;ns&nbsp;flatMap&nbsp;{n&nbsp;</span><span class="keyword">=</span><span>&gt;&nbsp;&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;os&nbsp;flatMap&nbsp;{o&nbsp;<span class="keyword">=</span><span>&gt;&nbsp;&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{ps&nbsp;map&nbsp;{p&nbsp;<span class="keyword">=</span><span>&gt;&nbsp;n&nbsp;*&nbsp;o&nbsp;*&nbsp;p}}}}&nbsp;&nbsp;</span></span></li></ol></div><pre name="code" class="scala" style="display: none;">val qs = ns flatMap {n =&gt; 
   os flatMap {o =&gt; 
      {ps map {p =&gt; n * o * p}}}}
</pre><p>That looks pretty similar to our previous "for."  That's because the rule is recursive</p>
<div class="dp-highlighter"><div class="bar"><div class="tools"><a href="http://james-iry.blogspot.com/2007/10/monads-are-elephants-part-2.html#" onclick="dp.sh.Toolbar.Command(&#39;ViewSource&#39;,this);return false;">view plain</a><a href="http://james-iry.blogspot.com/2007/10/monads-are-elephants-part-2.html#" onclick="dp.sh.Toolbar.Command(&#39;CopyToClipboard&#39;,this);return false;">copy to clipboard</a><a href="http://james-iry.blogspot.com/2007/10/monads-are-elephants-part-2.html#" onclick="dp.sh.Toolbar.Command(&#39;PrintSource&#39;,this);return false;">print</a><a href="http://james-iry.blogspot.com/2007/10/monads-are-elephants-part-2.html#" onclick="dp.sh.Toolbar.Command(&#39;About&#39;,this);return false;">?</a></div></div><ol class="dp-j"><li class="alt"><span><span class="keyword">for</span><span>(x1&nbsp;&lt;-&nbsp;expr1;...x&nbsp;&lt;-&nbsp;expr)&nbsp;&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;<span class="keyword">yield</span><span>&nbsp;resultExpr&nbsp;&nbsp;</span></span></li></ol></div><pre name="code" class="scala" style="display: none;">for(x1 &lt;- expr1;...x &lt;- expr) 
   yield resultExpr
</pre><p>expands to</p> 
<div class="dp-highlighter"><div class="bar"><div class="tools"><a href="http://james-iry.blogspot.com/2007/10/monads-are-elephants-part-2.html#" onclick="dp.sh.Toolbar.Command(&#39;ViewSource&#39;,this);return false;">view plain</a><a href="http://james-iry.blogspot.com/2007/10/monads-are-elephants-part-2.html#" onclick="dp.sh.Toolbar.Command(&#39;CopyToClipboard&#39;,this);return false;">copy to clipboard</a><a href="http://james-iry.blogspot.com/2007/10/monads-are-elephants-part-2.html#" onclick="dp.sh.Toolbar.Command(&#39;PrintSource&#39;,this);return false;">print</a><a href="http://james-iry.blogspot.com/2007/10/monads-are-elephants-part-2.html#" onclick="dp.sh.Toolbar.Command(&#39;About&#39;,this);return false;">?</a></div></div><ol class="dp-j"><li class="alt"><span><span>expr1&nbsp;flatMap&nbsp;{x1&nbsp;</span><span class="keyword">=</span><span>&gt;&nbsp;&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;<span class="keyword">for</span><span>(...;x&nbsp;&lt;-&nbsp;expr)&nbsp;</span><span class="keyword">yield</span><span>&nbsp;resultExpr&nbsp;&nbsp;</span></span></li><li class="alt"><span>}&nbsp;&nbsp;</span></li></ol></div><pre name="code" class="scala" style="display: none;">expr1 flatMap {x1 =&gt; 
   for(...;x &lt;- expr) yield resultExpr
}
</pre><p>This rule gets applied repeatedly until only one expression remains at which point the map form of expansion is used.  Here's how the compiler expands the "val qs = for..." statement (again red italics turns to bold green)</p>
<pre><ol>
<li>val qs = <font color="red">
   <i>for (n &lt;- ns;</i></font> o &lt;- os; p &lt;- ps)
   yield n * o * p</li>
<li>val qs = 
   <font color="green"><b>ns flatMap {n =&gt;</b></font> <font color="red"><i>for(o &lt;- os;</i></font> p &lt;- ps)
   yield n * o * p<font color="green"><b>}</b></font></li>
<li>val qs = 
   ns flatMap {n =&gt; <font color="green"><b>os flatMap {o =&gt;</b></font> <font color="red">
   <i>for(p &lt;- ps) yield n * o * p</i></font><font color="green"><b>}</b></font>}</li>
<li>val qs = 
   ns flatMap {n =&gt; os flatMap {o =&gt; <font color="green">
   <b>{ps map {p =&gt; n * o * p}</b></font>}}</li>
</ol></pre><h3>An Imperative "For"</h3><p>"For" also has an imperative version for the cases where you're only calling a function for its side effects.  In it you just drop the yield statement.</p>
<div class="dp-highlighter"><div class="bar"><div class="tools"><a href="http://james-iry.blogspot.com/2007/10/monads-are-elephants-part-2.html#" onclick="dp.sh.Toolbar.Command(&#39;ViewSource&#39;,this);return false;">view plain</a><a href="http://james-iry.blogspot.com/2007/10/monads-are-elephants-part-2.html#" onclick="dp.sh.Toolbar.Command(&#39;CopyToClipboard&#39;,this);return false;">copy to clipboard</a><a href="http://james-iry.blogspot.com/2007/10/monads-are-elephants-part-2.html#" onclick="dp.sh.Toolbar.Command(&#39;PrintSource&#39;,this);return false;">print</a><a href="http://james-iry.blogspot.com/2007/10/monads-are-elephants-part-2.html#" onclick="dp.sh.Toolbar.Command(&#39;About&#39;,this);return false;">?</a></div></div><ol class="dp-j"><li class="alt"><span><span class="keyword">val</span><span>&nbsp;ns&nbsp;</span><span class="keyword">=</span><span>&nbsp;List(</span><span class="number">1</span><span>,&nbsp;</span><span class="number">2</span><span>)&nbsp;&nbsp;</span></span></li><li class=""><span><span class="keyword">val</span><span>&nbsp;os&nbsp;</span><span class="keyword">=</span><span>&nbsp;List&nbsp;(</span><span class="number">4</span><span>,&nbsp;</span><span class="number">5</span><span>)&nbsp;&nbsp;</span></span></li><li class="alt"><span><span class="keyword">for</span><span>&nbsp;(n&nbsp;&lt;-&nbsp;ns;&nbsp;o&nbsp;&lt;-&nbsp;os)&nbsp;&nbsp;println(n&nbsp;*&nbsp;o)&nbsp;&nbsp;</span></span></li></ol></div><pre name="code" class="scala" style="display: none;">val ns = List(1, 2)
val os = List (4, 5)
for (n &lt;- ns; o &lt;- os)  println(n * o)
</pre><p>The expansion rule is much like the yield based version but foreach is used instead of flatMap or map.</p>
<div class="dp-highlighter"><div class="bar"><div class="tools"><a href="http://james-iry.blogspot.com/2007/10/monads-are-elephants-part-2.html#" onclick="dp.sh.Toolbar.Command(&#39;ViewSource&#39;,this);return false;">view plain</a><a href="http://james-iry.blogspot.com/2007/10/monads-are-elephants-part-2.html#" onclick="dp.sh.Toolbar.Command(&#39;CopyToClipboard&#39;,this);return false;">copy to clipboard</a><a href="http://james-iry.blogspot.com/2007/10/monads-are-elephants-part-2.html#" onclick="dp.sh.Toolbar.Command(&#39;PrintSource&#39;,this);return false;">print</a><a href="http://james-iry.blogspot.com/2007/10/monads-are-elephants-part-2.html#" onclick="dp.sh.Toolbar.Command(&#39;About&#39;,this);return false;">?</a></div></div><ol class="dp-j"><li class="alt"><span><span>ns&nbsp;foreach&nbsp;{n&nbsp;</span><span class="keyword">=</span><span>&gt;&nbsp;os&nbsp;foreach&nbsp;{o&nbsp;</span><span class="keyword">=</span><span>&gt;&nbsp;println(n&nbsp;*&nbsp;o)&nbsp;}}&nbsp;&nbsp;</span></span></li></ol></div><pre name="code" class="scala" style="display: none;">ns foreach {n =&gt; os foreach {o =&gt; println(n * o) }}
</pre><p>Now, you don't have to implement foreach if you don't want to use the imperative form of "for", but foreach is trivial to implement since we already have map.</p>
<div class="dp-highlighter"><div class="bar"><div class="tools"><a href="http://james-iry.blogspot.com/2007/10/monads-are-elephants-part-2.html#" onclick="dp.sh.Toolbar.Command(&#39;ViewSource&#39;,this);return false;">view plain</a><a href="http://james-iry.blogspot.com/2007/10/monads-are-elephants-part-2.html#" onclick="dp.sh.Toolbar.Command(&#39;CopyToClipboard&#39;,this);return false;">copy to clipboard</a><a href="http://james-iry.blogspot.com/2007/10/monads-are-elephants-part-2.html#" onclick="dp.sh.Toolbar.Command(&#39;PrintSource&#39;,this);return false;">print</a><a href="http://james-iry.blogspot.com/2007/10/monads-are-elephants-part-2.html#" onclick="dp.sh.Toolbar.Command(&#39;About&#39;,this);return false;">?</a></div></div><ol class="dp-j"><li class="alt"><span><span class="keyword">class</span><span>&nbsp;M[A]&nbsp;{&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;<span class="keyword">def</span><span>&nbsp;map[B](f</span><span class="keyword">:</span><span>&nbsp;A</span><span class="keyword">=</span><span>&gt;&nbsp;B)&nbsp;</span><span class="keyword">:</span><span>&nbsp;M[B]&nbsp;</span><span class="keyword">=</span><span>&nbsp;...&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;<span class="keyword">def</span><span>&nbsp;flatMap[B](f</span><span class="keyword">:</span><span>&nbsp;A&nbsp;</span><span class="keyword">=</span><span>&gt;&nbsp;M[B])&nbsp;</span><span class="keyword">:</span><span>&nbsp;M[B]&nbsp;</span><span class="keyword">=</span><span>&nbsp;...&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;<span class="keyword">def</span><span>&nbsp;foreach[B](f</span><span class="keyword">:</span><span>&nbsp;A</span><span class="keyword">=</span><span>&gt;&nbsp;B)&nbsp;</span><span class="keyword">:</span><span>&nbsp;Unit&nbsp;</span><span class="keyword">=</span><span>&nbsp;{&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;map(f)&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;()&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;</span></li><li class=""><span>}&nbsp;&nbsp;</span></li></ol></div><pre name="code" class="scala" style="display: none;">class M[A] {
   def map[B](f: A=&gt; B) : M[B] = ...
   def flatMap[B](f: A =&gt; M[B]) : M[B] = ...
   def foreach[B](f: A=&gt; B) : Unit = {
       map(f)
       ()
   }
}
</pre><p>In other words, foreach can just call map and throw away the results.  That might not be the most runtime efficient way of doing things, though, so Scala allows you to define foreach your own way.</p><h3>Filtering "For"</h3><p>So far our monads have built on a few key concepts.  These three methods - map, flatMap, and forEach -  allow almost all of what "for" can do.</p><p>Scala's "for" statement has one more feature: "if" guards.  As an example</p>
<div class="dp-highlighter"><div class="bar"><div class="tools"><a href="http://james-iry.blogspot.com/2007/10/monads-are-elephants-part-2.html#" onclick="dp.sh.Toolbar.Command(&#39;ViewSource&#39;,this);return false;">view plain</a><a href="http://james-iry.blogspot.com/2007/10/monads-are-elephants-part-2.html#" onclick="dp.sh.Toolbar.Command(&#39;CopyToClipboard&#39;,this);return false;">copy to clipboard</a><a href="http://james-iry.blogspot.com/2007/10/monads-are-elephants-part-2.html#" onclick="dp.sh.Toolbar.Command(&#39;PrintSource&#39;,this);return false;">print</a><a href="http://james-iry.blogspot.com/2007/10/monads-are-elephants-part-2.html#" onclick="dp.sh.Toolbar.Command(&#39;About&#39;,this);return false;">?</a></div></div><ol class="dp-j"><li class="alt"><span><span class="keyword">val</span><span>&nbsp;names&nbsp;</span><span class="keyword">=</span><span>&nbsp;List(</span><span class="string">"Abe"</span><span>,&nbsp;</span><span class="string">"Beth"</span><span>,&nbsp;</span><span class="string">"Bob"</span><span>,&nbsp;</span><span class="string">"Mary"</span><span>)&nbsp;&nbsp;</span></span></li><li class=""><span><span class="keyword">val</span><span>&nbsp;bNames&nbsp;</span><span class="keyword">=</span><span>&nbsp;</span><span class="keyword">for</span><span>&nbsp;(bName&nbsp;&lt;-&nbsp;names;&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;<span class="keyword">if</span><span>&nbsp;bName(</span><span class="number">0</span><span>)&nbsp;</span><span class="keyword">==</span><span>&nbsp;</span><span class="string">'B'</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span>)&nbsp;<span class="keyword">yield</span><span>&nbsp;bName&nbsp;+&nbsp;</span><span class="string">"&nbsp;is&nbsp;a&nbsp;name&nbsp;starting&nbsp;with&nbsp;B"</span><span>&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;</span></li><li class=""><span>assert(bNames&nbsp;<span class="keyword">==</span><span>&nbsp;List(&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;<span class="string">"Beth&nbsp;is&nbsp;a&nbsp;name&nbsp;starting&nbsp;with&nbsp;B"</span><span>,&nbsp;&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;<span class="string">"Bob&nbsp;is&nbsp;a&nbsp;name&nbsp;starting&nbsp;with&nbsp;B"</span><span>))&nbsp;&nbsp;</span></span></li></ol></div><pre name="code" class="scala" style="display: none;">val names = List("Abe", "Beth", "Bob", "Mary")
val bNames = for (bName &lt;- names;
   if bName(0) == 'B'
) yield bName + " is a name starting with B"

assert(bNames == List(
   "Beth is a name starting with B", 
   "Bob is a name starting with B"))
</pre><p>"if" guards get mapped to a method called filter.  Filter takes a predicate function (a function that takes on argument and returns true or false) and creates a new monad without the elements that don't match the predicate.  The for statement above gets translated into something like the following.</p>
<div class="dp-highlighter"><div class="bar"><div class="tools"><a href="http://james-iry.blogspot.com/2007/10/monads-are-elephants-part-2.html#" onclick="dp.sh.Toolbar.Command(&#39;ViewSource&#39;,this);return false;">view plain</a><a href="http://james-iry.blogspot.com/2007/10/monads-are-elephants-part-2.html#" onclick="dp.sh.Toolbar.Command(&#39;CopyToClipboard&#39;,this);return false;">copy to clipboard</a><a href="http://james-iry.blogspot.com/2007/10/monads-are-elephants-part-2.html#" onclick="dp.sh.Toolbar.Command(&#39;PrintSource&#39;,this);return false;">print</a><a href="http://james-iry.blogspot.com/2007/10/monads-are-elephants-part-2.html#" onclick="dp.sh.Toolbar.Command(&#39;About&#39;,this);return false;">?</a></div></div><ol class="dp-j"><li class="alt"><span><span class="keyword">val</span><span>&nbsp;bNames&nbsp;</span><span class="keyword">=</span><span>&nbsp;&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;(names&nbsp;filter&nbsp;{&nbsp;bName&nbsp;<span class="keyword">=</span><span>&gt;&nbsp;bName(</span><span class="number">0</span><span>)&nbsp;</span><span class="keyword">==</span><span>&nbsp;</span><span class="string">'B'</span><span>&nbsp;})&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;.map&nbsp;{&nbsp;bName&nbsp;<span class="keyword">=</span><span>&gt;&nbsp;&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;bName&nbsp;+&nbsp;<span class="string">"&nbsp;is&nbsp;a&nbsp;name&nbsp;starting&nbsp;with&nbsp;B"</span><span>&nbsp;&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;</span></li></ol></div><pre name="code" class="scala" style="display: none;">val bNames = 
   (names filter { bName =&gt; bName(0) == 'B' })
   .map { bName =&gt; 
      bName + " is a name starting with B" 
   }
</pre><p>First the list is filtered for names that start with B.  Then that filtered list is mapped using a function that appends " is a name..."</p><p>Not all monads can be filtered.  Using the container analogy, filtering might remove all elements and some containers can't be empty.  For such monads you don't need to create a filter method.  Scala won't complain as long as you don't use an "if" guard in a "for" expression.</p><p>I'll have more to say about filter, how to define it in purely monadic terms, and what kinds of monads can't be filtered in the next installment</p>  <h3>Conclusion for Part 2</h3><p>"For" is a handy way to work with monads.  Its syntax is particularly useful for working with Lists and other collections.  But "for" is more general than that.  It expands into map, flatMap, foreach, and filter.   Of those, map and flatMap should be defined for any monad.  The foreach method can be defined if you want the monad to be used imperatively and it's trivial to build.  Filter can be defined for some monads but not for others.</p><p>"m map f" can be implemented as "m flatMap {x =&gt; unit(x)}. "m foreach f" can be implemented in terms of map, or in terms of flatMap "m flatMap {x =&gt; unit(f(x));()}. Even "m filter p" can be implemented using flatMap (I'll show how next time).  flatMap really is the heart of the beast.</p><p>Remember, monads are elephants.  The picture I've painted of monads so far emphasizes collections.  In part 4, I'll present a monad that isn't a collection and only a container in an abstract way.  But before part 4 can happen, part 3 needs to cover some properties that are true of all monads: the monadic laws.</p><p>In the mean time, here's a cheat sheet showing how Haskell's do and Scala's for are related.</p><table border="1px"><tbody><tr><th>Haskell</th><th>Scala</th></tr><tr><td><pre>do var1&lt;- expn1
   var2 &lt;- expn2
   expn3</pre></td><td><pre>for {var1 &lt;- expn1;
   var2 &lt;- expn2;
   result &lt;- expn3
} yield result</pre></td></tr><tr><td><pre>do var1 &lt;- expn1
   var2 &lt;- expn2
   return expn3</pre></td><td><pre>for {var1 &lt;- expn1;
   var2 &lt;- expn2;
} yield expn3</pre></td></tr><tr><td><pre>do var1 &lt;- expn1 &gt;&gt; expn2
   return expn3</pre></td><td><pre>for {_ &lt;- expn1;
   var1 &lt;- expn2
} yield expn3</pre></td></tr></tbody></table><div class="footnotes"><h3>Footnotes</h3><p><sup><a name="footnote1"></a><a href="http://james-iry.blogspot.com/2007/10/monads-are-elephants-part-2.html#backfoot1">1</a></sup>. The Scala spec actually specifies that "for" expands using pattern matching.  Basically, the real spec expands the rules I present here to allow patterns on the left side of the &lt;-.  It would just muddy this article too much to delve too deeply into the subject.</p></div>
<div style="clear: both;"></div>
</div>
<div class="post-footer">
<div class="post-footer-line post-footer-line-1"><span class="post-author vcard">
Posted by
<span class="fn">James Iry</span>
</span>
<span class="post-timestamp">
at
<a class="timestamp-link" href="./One Div Zero  Monads are Elephants Part 2_files/One Div Zero  Monads are Elephants Part 2.htm" rel="bookmark" title="permanent link"><abbr class="published" title="2007-10-02T21:03:00-07:00">9:03 PM</abbr></a>
</span>
<span class="post-comment-link" style="visibility: visible;"></span>
<span class="post-icons">
<span class="item-control blog-admin pid-1767151345">
<a href="http://www.blogger.com/post-edit.g?blogID=178174920347765771&postID=1884014050593696028&from=pencil" title="Edit Post">
<img alt="" class="icon-action" height="18" src="./One Div Zero  Monads are Elephants Part 2_files/icon18_edit_allbkg.gif" width="18">
</a>
</span>
</span>
<span class="post-backlinks post-comment-link" style="visibility: visible;"><a class="comment-link disqus-blogger-comment-link" href="http://james-iry.blogspot.com/2007/10/monads-are-elephants-part-2.html#disqus_thread">21 Comments</a></span>
</div>
<div class="post-footer-line post-footer-line-2"><span class="post-labels">
Labels:
<a href="http://james-iry.blogspot.com/search/label/functional%20programming" rel="tag">functional programming</a>,
<a href="http://james-iry.blogspot.com/search/label/monads" rel="tag">monads</a>,
<a href="http://james-iry.blogspot.com/search/label/scala" rel="tag">scala</a>
</span>
</div>
<div class="post-footer-line post-footer-line-3"><span class="post-location">
</span>
</div>
</div>
</div>
<div class="comments" id="comments" style="display: block;"><div id="disqus_thread"><iframe id="dsq-2" data-disqus-uid="2" allowtransparency="true" frameborder="0" tabindex="0" title="Disqus" width="100%" src="./One Div Zero  Monads are Elephants Part 2_files/saved_resource.htm" style="width: 100% !important; border: none !important; overflow: hidden !important; height: 4553px !important;" scrolling="no" horizontalscrolling="no" verticalscrolling="no"></iframe></div></div>
</div>

        </div></div>
      
<!-- google_ad_section_end -->
</div>
<div class="blog-pager" id="blog-pager">
<span id="blog-pager-newer-link">
<a class="blog-pager-newer-link" href="http://james-iry.blogspot.com/2007/10/monads-are-elephants-part-3.html" id="Blog1_blog-pager-newer-link" title="Newer Post">Newer Post</a>
</span>
<span id="blog-pager-older-link">
<a class="blog-pager-older-link" href="http://james-iry.blogspot.com/2007/09/monads-are-elephants-part-1.html" id="Blog1_blog-pager-older-link" title="Older Post">Older Post</a>
</span>
<a class="home-link" href="http://james-iry.blogspot.com/">Home</a>
</div>
<div class="clear"></div>
<div class="post-feeds">
<div class="feed-links">
Subscribe to:
<a class="feed-link" href="http://james-iry.blogspot.com/feeds/1884014050593696028/comments/default" target="_blank" type="application/atom+xml">Post Comments (Atom)</a>
</div>
</div>
<script type="text/javascript">window.___gcfg = {'lang': 'en_US'};</script>
</div></div>
</div>
<div id="sidebar-wrapper">
<div class="sidebar section" id="sidebar"><div class="widget Image" id="Image1">
<div class="widget-content">
<img alt="" height="220" id="Image1_img" src="./One Div Zero  Monads are Elephants Part 2_files/Teotihuacan_62AF.jpg" width="220" style="visibility: visible;">
<br>
</div>
<div class="clear"></div>
<span class="widget-item-control">
<span class="item-control blog-admin">
<a class="quickedit" href="http://www.blogger.com/rearrange?blogID=178174920347765771&widgetType=Image&widgetId=Image1&action=editWidget&sectionId=sidebar" onclick="return _WidgetManager._PopupConfig(document.getElementById(&quot;Image1&quot;));" target="configImage1" title="Edit">
<img alt="" height="18" src="./One Div Zero  Monads are Elephants Part 2_files/icon18_wrench_allbkg.png" width="18">
</a>
</span>
</span>
<div class="clear"></div>
</div><div class="widget Profile" id="Profile1">
<h2>About Me</h2>
<div class="widget-content">
<dl class="profile-datablock">
<dt class="profile-data">
<a class="profile-name-link g-profile" href="http://www.blogger.com/profile/02835376424060382389" rel="author" style="background-image: url(//www.blogger.com/img/logo-16.png);" data-gapiscan="true" data-onload="true" data-gapiattached="true">
James Iry
</a>
</dt>
<dd class="profile-data">San Francisco, CA, United States</dd>
<dd class="profile-textblock">If cars were built like software then...well, I don't know squat about building cars so who knows.  It might be kinda cool.  But probably not.</dd>
</dl>
<a class="profile-link" href="http://www.blogger.com/profile/02835376424060382389" rel="author">View my complete profile</a>
<div class="clear"></div>
<span class="widget-item-control">
<span class="item-control blog-admin">
<a class="quickedit" href="http://www.blogger.com/rearrange?blogID=178174920347765771&widgetType=Profile&widgetId=Profile1&action=editWidget&sectionId=sidebar" onclick="return _WidgetManager._PopupConfig(document.getElementById(&quot;Profile1&quot;));" target="configProfile1" title="Edit">
<img alt="" height="18" src="./One Div Zero  Monads are Elephants Part 2_files/icon18_wrench_allbkg.png" width="18">
</a>
</span>
</span>
<div class="clear"></div>
</div>
</div><div class="widget HTML" id="HTML1">
<div class="widget-content">
<a href="http://www.pogofish.com/">Check My Resume</a><br>
<a href="http://twitter.com/jamesiry">Follow My Twitter</a><br>
<a href="http://www.linkedin.com/in/jamesiry">Link In My Profile</a>
</div>
<div class="clear"></div>
<span class="widget-item-control">
<span class="item-control blog-admin">
<a class="quickedit" href="http://www.blogger.com/rearrange?blogID=178174920347765771&widgetType=HTML&widgetId=HTML1&action=editWidget&sectionId=sidebar" onclick="return _WidgetManager._PopupConfig(document.getElementById(&quot;HTML1&quot;));" target="configHTML1" title="Edit">
<img alt="" height="18" src="./One Div Zero  Monads are Elephants Part 2_files/icon18_wrench_allbkg.png" width="18">
</a>
</span>
</span>
<div class="clear"></div>
</div><div class="widget BlogArchive" id="BlogArchive1">
<h2>Blog Archive</h2>
<div class="widget-content">
<div id="ArchiveList">
<div id="BlogArchive1_ArchiveList">
<ul class="hierarchy">
<li class="archivedate collapsed">
<a class="toggle" href="javascript:void(0)">
<span class="zippy">

          ►&nbsp;
        
</span>
</a>
<a class="post-count-link" href="http://james-iry.blogspot.com/search?updated-min=2013-01-01T00:00:00-08:00&updated-max=2014-01-01T00:00:00-08:00&max-results=3">2013</a>
<span class="post-count" dir="ltr">(3)</span>
<ul class="hierarchy">
<li class="archivedate collapsed">
<a class="toggle" href="javascript:void(0)">
<span class="zippy">

          ►&nbsp;
        
</span>
</a>
<a class="post-count-link" href="http://james-iry.blogspot.com/2013_03_01_archive.html">March</a>
<span class="post-count" dir="ltr">(1)</span>
</li>
</ul>
<ul class="hierarchy">
<li class="archivedate collapsed">
<a class="toggle" href="javascript:void(0)">
<span class="zippy">

          ►&nbsp;
        
</span>
</a>
<a class="post-count-link" href="http://james-iry.blogspot.com/2013_02_01_archive.html">February</a>
<span class="post-count" dir="ltr">(1)</span>
</li>
</ul>
<ul class="hierarchy">
<li class="archivedate collapsed">
<a class="toggle" href="javascript:void(0)">
<span class="zippy">

          ►&nbsp;
        
</span>
</a>
<a class="post-count-link" href="http://james-iry.blogspot.com/2013_01_01_archive.html">January</a>
<span class="post-count" dir="ltr">(1)</span>
</li>
</ul>
</li>
</ul>
<ul class="hierarchy">
<li class="archivedate collapsed">
<a class="toggle" href="javascript:void(0)">
<span class="zippy">

          ►&nbsp;
        
</span>
</a>
<a class="post-count-link" href="http://james-iry.blogspot.com/search?updated-min=2012-01-01T00:00:00-08:00&updated-max=2013-01-01T00:00:00-08:00&max-results=4">2012</a>
<span class="post-count" dir="ltr">(4)</span>
<ul class="hierarchy">
<li class="archivedate collapsed">
<a class="toggle" href="javascript:void(0)">
<span class="zippy">

          ►&nbsp;
        
</span>
</a>
<a class="post-count-link" href="http://james-iry.blogspot.com/2012_03_01_archive.html">March</a>
<span class="post-count" dir="ltr">(1)</span>
</li>
</ul>
<ul class="hierarchy">
<li class="archivedate collapsed">
<a class="toggle" href="javascript:void(0)">
<span class="zippy">

          ►&nbsp;
        
</span>
</a>
<a class="post-count-link" href="http://james-iry.blogspot.com/2012_02_01_archive.html">February</a>
<span class="post-count" dir="ltr">(2)</span>
</li>
</ul>
<ul class="hierarchy">
<li class="archivedate collapsed">
<a class="toggle" href="javascript:void(0)">
<span class="zippy">

          ►&nbsp;
        
</span>
</a>
<a class="post-count-link" href="http://james-iry.blogspot.com/2012_01_01_archive.html">January</a>
<span class="post-count" dir="ltr">(1)</span>
</li>
</ul>
</li>
</ul>
<ul class="hierarchy">
<li class="archivedate collapsed">
<a class="toggle" href="javascript:void(0)">
<span class="zippy">

          ►&nbsp;
        
</span>
</a>
<a class="post-count-link" href="http://james-iry.blogspot.com/search?updated-min=2011-01-01T00:00:00-08:00&updated-max=2012-01-01T00:00:00-08:00&max-results=3">2011</a>
<span class="post-count" dir="ltr">(3)</span>
<ul class="hierarchy">
<li class="archivedate collapsed">
<a class="toggle" href="javascript:void(0)">
<span class="zippy">

          ►&nbsp;
        
</span>
</a>
<a class="post-count-link" href="http://james-iry.blogspot.com/2011_06_01_archive.html">June</a>
<span class="post-count" dir="ltr">(1)</span>
</li>
</ul>
<ul class="hierarchy">
<li class="archivedate collapsed">
<a class="toggle" href="javascript:void(0)">
<span class="zippy">

          ►&nbsp;
        
</span>
</a>
<a class="post-count-link" href="http://james-iry.blogspot.com/2011_05_01_archive.html">May</a>
<span class="post-count" dir="ltr">(1)</span>
</li>
</ul>
<ul class="hierarchy">
<li class="archivedate collapsed">
<a class="toggle" href="javascript:void(0)">
<span class="zippy">

          ►&nbsp;
        
</span>
</a>
<a class="post-count-link" href="http://james-iry.blogspot.com/2011_01_01_archive.html">January</a>
<span class="post-count" dir="ltr">(1)</span>
</li>
</ul>
</li>
</ul>
<ul class="hierarchy">
<li class="archivedate collapsed">
<a class="toggle" href="javascript:void(0)">
<span class="zippy">

          ►&nbsp;
        
</span>
</a>
<a class="post-count-link" href="http://james-iry.blogspot.com/search?updated-min=2010-01-01T00:00:00-08:00&updated-max=2011-01-01T00:00:00-08:00&max-results=16">2010</a>
<span class="post-count" dir="ltr">(16)</span>
<ul class="hierarchy">
<li class="archivedate collapsed">
<a class="toggle" href="javascript:void(0)">
<span class="zippy">

          ►&nbsp;
        
</span>
</a>
<a class="post-count-link" href="http://james-iry.blogspot.com/2010_11_01_archive.html">November</a>
<span class="post-count" dir="ltr">(1)</span>
</li>
</ul>
<ul class="hierarchy">
<li class="archivedate collapsed">
<a class="toggle" href="javascript:void(0)">
<span class="zippy">

          ►&nbsp;
        
</span>
</a>
<a class="post-count-link" href="http://james-iry.blogspot.com/2010_10_01_archive.html">October</a>
<span class="post-count" dir="ltr">(3)</span>
</li>
</ul>
<ul class="hierarchy">
<li class="archivedate collapsed">
<a class="toggle" href="javascript:void(0)">
<span class="zippy">

          ►&nbsp;
        
</span>
</a>
<a class="post-count-link" href="http://james-iry.blogspot.com/2010_09_01_archive.html">September</a>
<span class="post-count" dir="ltr">(1)</span>
</li>
</ul>
<ul class="hierarchy">
<li class="archivedate collapsed">
<a class="toggle" href="javascript:void(0)">
<span class="zippy">

          ►&nbsp;
        
</span>
</a>
<a class="post-count-link" href="http://james-iry.blogspot.com/2010_08_01_archive.html">August</a>
<span class="post-count" dir="ltr">(3)</span>
</li>
</ul>
<ul class="hierarchy">
<li class="archivedate collapsed">
<a class="toggle" href="javascript:void(0)">
<span class="zippy">

          ►&nbsp;
        
</span>
</a>
<a class="post-count-link" href="http://james-iry.blogspot.com/2010_07_01_archive.html">July</a>
<span class="post-count" dir="ltr">(2)</span>
</li>
</ul>
<ul class="hierarchy">
<li class="archivedate collapsed">
<a class="toggle" href="javascript:void(0)">
<span class="zippy">

          ►&nbsp;
        
</span>
</a>
<a class="post-count-link" href="http://james-iry.blogspot.com/2010_05_01_archive.html">May</a>
<span class="post-count" dir="ltr">(3)</span>
</li>
</ul>
<ul class="hierarchy">
<li class="archivedate collapsed">
<a class="toggle" href="javascript:void(0)">
<span class="zippy">

          ►&nbsp;
        
</span>
</a>
<a class="post-count-link" href="http://james-iry.blogspot.com/2010_04_01_archive.html">April</a>
<span class="post-count" dir="ltr">(2)</span>
</li>
</ul>
<ul class="hierarchy">
<li class="archivedate collapsed">
<a class="toggle" href="javascript:void(0)">
<span class="zippy">

          ►&nbsp;
        
</span>
</a>
<a class="post-count-link" href="http://james-iry.blogspot.com/2010_03_01_archive.html">March</a>
<span class="post-count" dir="ltr">(1)</span>
</li>
</ul>
</li>
</ul>
<ul class="hierarchy">
<li class="archivedate collapsed">
<a class="toggle" href="javascript:void(0)">
<span class="zippy">

          ►&nbsp;
        
</span>
</a>
<a class="post-count-link" href="http://james-iry.blogspot.com/search?updated-min=2009-01-01T00:00:00-08:00&updated-max=2010-01-01T00:00:00-08:00&max-results=14">2009</a>
<span class="post-count" dir="ltr">(14)</span>
<ul class="hierarchy">
<li class="archivedate collapsed">
<a class="toggle" href="javascript:void(0)">
<span class="zippy">

          ►&nbsp;
        
</span>
</a>
<a class="post-count-link" href="http://james-iry.blogspot.com/2009_08_01_archive.html">August</a>
<span class="post-count" dir="ltr">(1)</span>
</li>
</ul>
<ul class="hierarchy">
<li class="archivedate collapsed">
<a class="toggle" href="javascript:void(0)">
<span class="zippy">

          ►&nbsp;
        
</span>
</a>
<a class="post-count-link" href="http://james-iry.blogspot.com/2009_07_01_archive.html">July</a>
<span class="post-count" dir="ltr">(3)</span>
</li>
</ul>
<ul class="hierarchy">
<li class="archivedate collapsed">
<a class="toggle" href="javascript:void(0)">
<span class="zippy">

          ►&nbsp;
        
</span>
</a>
<a class="post-count-link" href="http://james-iry.blogspot.com/2009_05_01_archive.html">May</a>
<span class="post-count" dir="ltr">(2)</span>
</li>
</ul>
<ul class="hierarchy">
<li class="archivedate collapsed">
<a class="toggle" href="javascript:void(0)">
<span class="zippy">

          ►&nbsp;
        
</span>
</a>
<a class="post-count-link" href="http://james-iry.blogspot.com/2009_04_01_archive.html">April</a>
<span class="post-count" dir="ltr">(6)</span>
</li>
</ul>
<ul class="hierarchy">
<li class="archivedate collapsed">
<a class="toggle" href="javascript:void(0)">
<span class="zippy">

          ►&nbsp;
        
</span>
</a>
<a class="post-count-link" href="http://james-iry.blogspot.com/2009_03_01_archive.html">March</a>
<span class="post-count" dir="ltr">(1)</span>
</li>
</ul>
<ul class="hierarchy">
<li class="archivedate collapsed">
<a class="toggle" href="javascript:void(0)">
<span class="zippy">

          ►&nbsp;
        
</span>
</a>
<a class="post-count-link" href="http://james-iry.blogspot.com/2009_01_01_archive.html">January</a>
<span class="post-count" dir="ltr">(1)</span>
</li>
</ul>
</li>
</ul>
<ul class="hierarchy">
<li class="archivedate collapsed">
<a class="toggle" href="javascript:void(0)">
<span class="zippy">

          ►&nbsp;
        
</span>
</a>
<a class="post-count-link" href="http://james-iry.blogspot.com/search?updated-min=2008-01-01T00:00:00-08:00&updated-max=2009-01-01T00:00:00-08:00&max-results=5">2008</a>
<span class="post-count" dir="ltr">(5)</span>
<ul class="hierarchy">
<li class="archivedate collapsed">
<a class="toggle" href="javascript:void(0)">
<span class="zippy">

          ►&nbsp;
        
</span>
</a>
<a class="post-count-link" href="http://james-iry.blogspot.com/2008_07_01_archive.html">July</a>
<span class="post-count" dir="ltr">(4)</span>
</li>
</ul>
<ul class="hierarchy">
<li class="archivedate collapsed">
<a class="toggle" href="javascript:void(0)">
<span class="zippy">

          ►&nbsp;
        
</span>
</a>
<a class="post-count-link" href="http://james-iry.blogspot.com/2008_06_01_archive.html">June</a>
<span class="post-count" dir="ltr">(1)</span>
</li>
</ul>
</li>
</ul>
<ul class="hierarchy">
<li class="archivedate expanded">
<a class="toggle" href="javascript:void(0)">
<span class="zippy toggle-open">▼&nbsp;</span>
</a>
<a class="post-count-link" href="http://james-iry.blogspot.com/search?updated-min=2007-01-01T00:00:00-08:00&updated-max=2008-01-01T00:00:00-08:00&max-results=7">2007</a>
<span class="post-count" dir="ltr">(7)</span>
<ul class="hierarchy">
<li class="archivedate collapsed">
<a class="toggle" href="javascript:void(0)">
<span class="zippy">

          ►&nbsp;
        
</span>
</a>
<a class="post-count-link" href="http://james-iry.blogspot.com/2007_11_01_archive.html">November</a>
<span class="post-count" dir="ltr">(1)</span>
</li>
</ul>
<ul class="hierarchy">
<li class="archivedate expanded">
<a class="toggle" href="javascript:void(0)">
<span class="zippy toggle-open">▼&nbsp;</span>
</a>
<a class="post-count-link" href="http://james-iry.blogspot.com/2007_10_01_archive.html">October</a>
<span class="post-count" dir="ltr">(2)</span>
<ul class="posts">
<li><a href="http://james-iry.blogspot.com/2007/10/monads-are-elephants-part-3.html">Monads are Elephants Part 3</a></li>
<li><a href="./One Div Zero  Monads are Elephants Part 2_files/One Div Zero  Monads are Elephants Part 2.htm">Monads are Elephants Part 2</a></li>
</ul>
</li>
</ul>
<ul class="hierarchy">
<li class="archivedate collapsed">
<a class="toggle" href="javascript:void(0)">
<span class="zippy">

          ►&nbsp;
        
</span>
</a>
<a class="post-count-link" href="http://james-iry.blogspot.com/2007_09_01_archive.html">September</a>
<span class="post-count" dir="ltr">(1)</span>
</li>
</ul>
<ul class="hierarchy">
<li class="archivedate collapsed">
<a class="toggle" href="javascript:void(0)">
<span class="zippy">

          ►&nbsp;
        
</span>
</a>
<a class="post-count-link" href="http://james-iry.blogspot.com/2007_08_01_archive.html">August</a>
<span class="post-count" dir="ltr">(3)</span>
</li>
</ul>
</li>
</ul>
</div>
</div>
<div class="clear"></div>
<span class="widget-item-control">
<span class="item-control blog-admin">
<a class="quickedit" href="http://www.blogger.com/rearrange?blogID=178174920347765771&widgetType=BlogArchive&widgetId=BlogArchive1&action=editWidget&sectionId=sidebar" onclick="return _WidgetManager._PopupConfig(document.getElementById(&quot;BlogArchive1&quot;));" target="configBlogArchive1" title="Edit">
<img alt="" height="18" src="./One Div Zero  Monads are Elephants Part 2_files/icon18_wrench_allbkg.png" width="18">
</a>
</span>
</span>
<div class="clear"></div>
</div>
</div><div class="widget Label" id="Label1">
<h2>Labels</h2>
<div class="widget-content list-label-widget-content">
<ul>
<li>
<a dir="ltr" href="http://james-iry.blogspot.com/search/label/C">C</a>
<span dir="ltr">(5)</span>
</li>
<li>
<a dir="ltr" href="http://james-iry.blogspot.com/search/label/C%23">C#</a>
<span dir="ltr">(2)</span>
</li>
<li>
<a dir="ltr" href="http://james-iry.blogspot.com/search/label/C%2B%2B">C++</a>
<span dir="ltr">(3)</span>
</li>
<li>
<a dir="ltr" href="http://james-iry.blogspot.com/search/label/erlang">erlang</a>
<span dir="ltr">(4)</span>
</li>
<li>
<a dir="ltr" href="http://james-iry.blogspot.com/search/label/functional%20programming">functional programming</a>
<span dir="ltr">(15)</span>
</li>
<li>
<a dir="ltr" href="http://james-iry.blogspot.com/search/label/groovy">groovy</a>
<span dir="ltr">(2)</span>
</li>
<li>
<a dir="ltr" href="http://james-iry.blogspot.com/search/label/haskell">haskell</a>
<span dir="ltr">(6)</span>
</li>
<li>
<a dir="ltr" href="http://james-iry.blogspot.com/search/label/humor">humor</a>
<span dir="ltr">(7)</span>
</li>
<li>
<a dir="ltr" href="http://james-iry.blogspot.com/search/label/java">java</a>
<span dir="ltr">(7)</span>
</li>
<li>
<a dir="ltr" href="http://james-iry.blogspot.com/search/label/monads">monads</a>
<span dir="ltr">(5)</span>
</li>
<li>
<a dir="ltr" href="http://james-iry.blogspot.com/search/label/object%20oriented">object oriented</a>
<span dir="ltr">(3)</span>
</li>
<li>
<a dir="ltr" href="http://james-iry.blogspot.com/search/label/parallel%2Fdistributed%2Fconcurrent">parallel/distributed/concurrent</a>
<span dir="ltr">(5)</span>
</li>
<li>
<a dir="ltr" href="http://james-iry.blogspot.com/search/label/programming%20languages">programming languages</a>
<span dir="ltr">(9)</span>
</li>
<li>
<a dir="ltr" href="http://james-iry.blogspot.com/search/label/ruby">ruby</a>
<span dir="ltr">(1)</span>
</li>
<li>
<a dir="ltr" href="http://james-iry.blogspot.com/search/label/scala">scala</a>
<span dir="ltr">(16)</span>
</li>
<li>
<a dir="ltr" href="http://james-iry.blogspot.com/search/label/scala%20humor">scala humor</a>
<span dir="ltr">(1)</span>
</li>
<li>
<a dir="ltr" href="http://james-iry.blogspot.com/search/label/scuba">scuba</a>
<span dir="ltr">(1)</span>
</li>
<li>
<a dir="ltr" href="http://james-iry.blogspot.com/search/label/systems%20design">systems design</a>
<span dir="ltr">(2)</span>
</li>
<li>
<a dir="ltr" href="http://james-iry.blogspot.com/search/label/types">types</a>
<span dir="ltr">(8)</span>
</li>
<li>
<a dir="ltr" href="http://james-iry.blogspot.com/search/label/version%20control">version control</a>
<span dir="ltr">(1)</span>
</li>
</ul>
<div class="clear"></div>
<span class="widget-item-control">
<span class="item-control blog-admin">
<a class="quickedit" href="http://www.blogger.com/rearrange?blogID=178174920347765771&widgetType=Label&widgetId=Label1&action=editWidget&sectionId=sidebar" onclick="return _WidgetManager._PopupConfig(document.getElementById(&quot;Label1&quot;));" target="configLabel1" title="Edit">
<img alt="" height="18" src="./One Div Zero  Monads are Elephants Part 2_files/icon18_wrench_allbkg.png" width="18">
</a>
</span>
</span>
<div class="clear"></div>
</div>
</div></div>
</div>
<!-- spacer for skins that want sidebar and main to be the same height-->
<div class="clear">&nbsp;</div>
</div>
<!-- end content-wrapper -->
<div id="footer-wrapper">
<div class="footer section" id="footer"><div class="widget HTML" id="HTML2">
<script type="text/javascript">
                var disqus_shortname = 'onedivzero';
                var disqus_blogger_current_url = "http://james-iry.blogspot.com/2007/10/monads-are-elephants-part-2.html";
                if (!disqus_blogger_current_url.length) {
                    disqus_blogger_current_url = "http://james-iry.blogspot.com/2007/10/monads-are-elephants-part-2.html";
                }
                var disqus_blogger_homepage_url = "http://james-iry.blogspot.com/";
                var disqus_blogger_canonical_homepage_url = "http://james-iry.blogspot.com/";
            </script>
<style type="text/css">
                    #comments {display:none;}
                </style>
<script type="text/javascript">
                    (function() {
                        var bloggerjs = document.createElement('script');
                        bloggerjs.type = 'text/javascript';
                        bloggerjs.async = true;
                        bloggerjs.src = 'http://'+disqus_shortname+'.disqus.com/blogger_item.js';
                        (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(bloggerjs);
                    })();
                </script>
<style type="text/css">
                    .post-comment-link { visibility: hidden; }
                </style>
<script type="text/javascript">
                (function() {
                    var bloggerjs = document.createElement('script');
                    bloggerjs.type = 'text/javascript';
                    bloggerjs.async = true;
                    bloggerjs.src = 'http://'+disqus_shortname+'.disqus.com/blogger_index.js';
                    (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(bloggerjs);
                })();
                </script>
</div></div>
</div>
</div></div>
<!-- end outer-wrapper -->
<script type="text/javascript">
var gaJsHost = (("https:" == document.location.protocol) ? "https://ssl." : "http://www.");
document.write(unescape("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E"));
</script><script src="./One Div Zero  Monads are Elephants Part 2_files/ga.js" type="text/javascript"></script>
<script type="text/javascript">
try {
var pageTracker = _gat._getTracker("UA-15939853-1");
pageTracker._trackPageview();
} catch(err) {}</script>
<script type="text/javascript">
if (window.jstiming) window.jstiming.load.tick('widgetJsBefore');
</script><script type="text/javascript" src="./One Div Zero  Monads are Elephants Part 2_files/1040640957-widgets.js"></script>
<script type="text/javascript" src="./One Div Zero  Monads are Elephants Part 2_files/plusone.js" gapi_processed="true"></script>
<script type="text/javascript">
if (typeof(BLOG_attachCsiOnload) != 'undefined' && BLOG_attachCsiOnload != null) { window['blogger_templates_experiment_id'] = "templatesV1";window['blogger_blog_id'] = '178174920347765771';BLOG_attachCsiOnload('item_'); }_WidgetManager._Init('//www.blogger.com/rearrange?blogID\x3d178174920347765771','//james-iry.blogspot.com/2007/10/monads-are-elephants-part-2.html','178174920347765771');
_WidgetManager._SetDataContext([{'name': 'blog', 'data': {'blogId': '178174920347765771', 'bloggerUrl': 'http://www.blogger.com', 'title': 'One Div Zero', 'pageType': 'item', 'url': 'http://james-iry.blogspot.com/2007/10/monads-are-elephants-part-2.html', 'canonicalUrl': 'http://james-iry.blogspot.com/2007/10/monads-are-elephants-part-2.html', 'canonicalHomepageUrl': 'http://james-iry.blogspot.com/', 'homepageUrl': 'http://james-iry.blogspot.com/', 'blogspotFaviconUrl': 'http://james-iry.blogspot.com/favicon.ico', 'enabledCommentProfileImages': true, 'adultContent': false, 'disableAdSenseWidget': false, 'analyticsAccountNumber': '', 'searchLabel': '', 'searchQuery': '', 'pageName': 'Monads are Elephants Part 2', 'pageTitle': 'One Div Zero: Monads are Elephants Part 2', 'encoding': 'UTF-8', 'locale': 'en', 'localeUnderscoreDelimited': 'en', 'isPrivate': false, 'isMobile': false, 'isMobileRequest': false, 'mobileClass': '', 'isPrivateBlog': false, 'languageDirection': 'ltr', 'feedLinks': '\74link rel\75\42alternate\42 type\75\42application/atom+xml\42 title\75\42One Div Zero - Atom\42 href\75\42http://james-iry.blogspot.com/feeds/posts/default\42 /\76\n\74link rel\75\42alternate\42 type\75\42application/rss+xml\42 title\75\42One Div Zero - RSS\42 href\75\42http://james-iry.blogspot.com/feeds/posts/default?alt\75rss\42 /\76\n\74link rel\75\42service.post\42 type\75\42application/atom+xml\42 title\75\42One Div Zero - Atom\42 href\75\42http://www.blogger.com/feeds/178174920347765771/posts/default\42 /\76\n\n\74link rel\75\42alternate\42 type\75\42application/atom+xml\42 title\75\42One Div Zero - Atom\42 href\75\42http://james-iry.blogspot.com/feeds/1884014050593696028/comments/default\42 /\76\n', 'meTag': '', 'openIdOpTag': '', 'imageSrcTag': '', 'latencyHeadScript': '\74script type\75\42text/javascript\42\76(function() { var b\75window,f\75\42chrome\42,g\75\42jstiming\42,k\75\42tick\42;(function(){function d(a){this.t\75{};this.tick\75function(a,d,c){var e\75void 0!\75c?c:(new Date).getTime();this.t[a]\75[e,d];if(void 0\75\75c)try{b.console.timeStamp(\42CSI/\42+a)}catch(h){}};this[k](\42start\42,null,a)}var a;b.performance\46\46(a\75b.performance.timing);var n\75a?new d(a.responseStart):new d;b.jstiming\75{Timer:d,load:n};if(a){var c\75a.navigationStart,h\75a.responseStart;0\74c\46\46h\76\75c\46\46(b[g].srt\75h-c)}if(a){var e\75b[g].load;0\74c\46\46h\76\75c\46\46(e[k](\42_wtsrt\42,void 0,c),e[k](\42wtsrt_\42,\42_wtsrt\42,h),e[k](\42tbsd_\42,\42wtsrt_\42))}try{a\75null,\nb[f]\46\46b[f].csi\46\46(a\75Math.floor(b[f].csi().pageT),e\46\0460\74c\46\46(e[k](\42_tbnd\42,void 0,b[f].csi().startE),e[k](\42tbnd_\42,\42_tbnd\42,c))),null\75\75a\46\46b.gtbExternal\46\46(a\75b.gtbExternal.pageT()),null\75\75a\46\46b.external\46\46(a\75b.external.pageT,e\46\0460\74c\46\46(e[k](\42_tbnd\42,void 0,b.external.startE),e[k](\42tbnd_\42,\42_tbnd\42,c))),a\46\46(b[g].pt\75a)}catch(p){}})();b.tickAboveFold\75function(d){var a\0750;if(d.offsetParent){do a+\75d.offsetTop;while(d\75d.offsetParent)}d\75a;750\76\75d\46\46b[g].load[k](\42aft\42)};var l\75!1;function m(){l||(l\75!0,b[g].load[k](\42firstScrollTime\42))}b.addEventListener?b.addEventListener(\42scroll\42,m,!1):b.attachEvent(\42onscroll\42,m);\n })();\74/script\076', 'mobileHeadScript': '', 'view': '', 'dynamicViewsCommentsSrc': '//www.blogblog.com/dynamicviews/4224c15c4e7c9321/js/comments.js', 'dynamicViewsScriptSrc': '//www.blogblog.com/dynamicviews/d6f37bb30c327165', 'plusOneApiSrc': 'https://apis.google.com/js/plusone.js', 'testHtml5CssSrc': 'https://www.blogger.com/static/v1/widgets/3640646893-css_bundle_html5.css', 'sf': 'n', 'tf': ''}}, {'name': 'skin', 'data': {'vars': {'sidebartextcolor': '#666666', 'linkcolor': '#5588aa', 'visitedlinkcolor': '#999999', 'textcolor': '#333333', 'headerfont': 'normal normal 78% \47Trebuchet MS\47,Trebuchet,Arial,Verdana,Sans-serif', 'pagetitlefont': 'normal normal 200% Georgia, Serif', 'bgcolor': '#ffffff', 'descriptioncolor': '#999999', 'titlecolor': '#cc6600', 'bordercolor': '#cccccc', 'postfooterfont': 'normal normal 78% \47Trebuchet MS\47, Trebuchet, Arial, Verdana, Sans-serif', 'pagetitlecolor': '#666666', 'bodyfont': 'normal normal 100% Georgia, Serif', 'endSide': 'right', 'startSide': 'left', 'descriptionfont': 'normal normal 78% \47Trebuchet MS\47, Trebuchet, Arial, Verdana, Sans-serif', 'sidebarcolor': '#999999'}, 'override': ''}}, {'name': 'view', 'data': {'classic': {'name': 'classic', 'url': '/?view\75classic'}, 'flipcard': {'name': 'flipcard', 'url': '/?view\75flipcard'}, 'magazine': {'name': 'magazine', 'url': '/?view\75magazine'}, 'mosaic': {'name': 'mosaic', 'url': '/?view\75mosaic'}, 'sidebar': {'name': 'sidebar', 'url': '/?view\75sidebar'}, 'snapshot': {'name': 'snapshot', 'url': '/?view\75snapshot'}, 'timeslide': {'name': 'timeslide', 'url': '/?view\75timeslide'}}}]);
_WidgetManager._RegisterWidget('_HTMLView', new _WidgetInfo('HTML2', 'footer', null, document.getElementById('HTML2'), {}, 'displayModeFull'));
_WidgetManager._RegisterWidget('_ImageView', new _WidgetInfo('Image1', 'sidebar', null, document.getElementById('Image1'), {'resize': true}, 'displayModeFull'));
_WidgetManager._RegisterWidget('_ProfileView', new _WidgetInfo('Profile1', 'sidebar', null, document.getElementById('Profile1'), {}, 'displayModeFull'));
_WidgetManager._RegisterWidget('_HTMLView', new _WidgetInfo('HTML1', 'sidebar', null, document.getElementById('HTML1'), {}, 'displayModeFull'));
_WidgetManager._RegisterWidget('_BlogArchiveView', new _WidgetInfo('BlogArchive1', 'sidebar', null, document.getElementById('BlogArchive1'), {'languageDirection': 'ltr'}, 'displayModeFull'));
_WidgetManager._RegisterWidget('_LabelView', new _WidgetInfo('Label1', 'sidebar', null, document.getElementById('Label1'), {}, 'displayModeFull'));
_WidgetManager._RegisterWidget('_HeaderView', new _WidgetInfo('Header1', 'header', null, document.getElementById('Header1'), {}, 'displayModeFull'));
_WidgetManager._RegisterWidget('_NavbarView', new _WidgetInfo('Navbar1', 'navbar', null, document.getElementById('Navbar1'), {}, 'displayModeFull'));
_WidgetManager._RegisterWidget('_BlogView', new _WidgetInfo('Blog1', 'main', null, document.getElementById('Blog1'), {'cmtInteractionsEnabled': false, 'showBacklinks': true, 'postId': '1884014050593696028', 'lightboxEnabled': true, 'lightboxModuleUrl': 'https://www.blogger.com/static/v1/jsbin/936398874-lbx.js', 'lightboxCssUrl': 'https://www.blogger.com/static/v1/v-css/4138445517-lightbox_bundle.css'}, 'displayModeFull'));
</script>

<iframe frameborder="0" id="google_top_static_frame" name="google_top_static_frame" src="./One Div Zero  Monads are Elephants Part 2_files/blank.htm" style="height: 0px; width: 0px; position: absolute;"></iframe></body></html>